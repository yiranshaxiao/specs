<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>6809 INSTRUCTION TABLES 5 TO 8</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2800.1170" name=3DGENERATOR></HEAD>
<BODY bgColor=3D#ffffff>
<H1><FONT color=3D#0000ff>6809 INSTRUCTION TABLES 4 TO 8</FONT></H1>
<HR SIZE=3D1>

<H2><A name=3D"TABLE 4"><FONT color=3D#0000ff>TABLE 4</FONT></A><FONT =
color=3D#0000ff>=20
- 8-BIT ACCUMULATOR AND MEMORY INSTRUCTIONS</FONT></H2>
<TABLE cellSpacing=3D0 cellPadding=3D3 border=3D0>
  <TBODY>
  <TR>
    <TD><FONT face=3DCourier>ADCA, ADCB</FONT></TD>
    <TD>Add memory to accumulator with carry</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>ADDA, ADDB</FONT></TD>
    <TD>Add memory to accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>ANDA, ANDB</FONT></TD>
    <TD>AND memory to accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>ASL. ASLA, ASLB</FONT></TD>
    <TD>Arithmetic shift of accumulator or memory left</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>ASR, ASRA, ASRB</FONT></TD>
    <TD>Arithmetic shift of accumulator or memory right</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BITA, BITB</FONT></TD>
    <TD>Bit test memory with accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>CLR, CLRA, CLRB </FONT></TD>
    <TD>Clear accumulator or memory location</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>CMPA, CMPB</FONT></TD>
    <TD>Compare memory from accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>COM, COMA, COMB</FONT></TD>
    <TD>Complement accumulator or memory location</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>DAA</FONT></TD>
    <TD>Decimal Adjust Accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>DEC, DECA, DECB</FONT></TD>
    <TD>Decrement accumulator or memory location</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>EORA, EORB</FONT></TD>
    <TD>Exclusive-OR memory with accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>EXG R1, R2</FONT></TD>
    <TD>Exchange R1 with R2 (R1, R2 =3D A, B, CC, DP)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>INC, INCA, INCB</FONT></TD>
    <TD>Increment accumulator or memory location</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>LDA, LDB</FONT></TD>
    <TD>Load accumulator from memory</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>LSL, LSLA, LSLB </FONT></TD>
    <TD>Logical shift left accumulator or memory location</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>LSR, LSRA, LSRB</FONT></TD>
    <TD>Logical shift right accumulator or memory location</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>MUL</FONT></TD>
    <TD>Unsiqned multiply (A x B =3D&gt; D)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>NEG, NEGA, NEGB</FONT></TD>
    <TD>Negate accumulator or memory</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>ORA, ORB </FONT></TD>
    <TD>Or memory with accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>ROL, ROLA, ROLB </FONT></TD>
    <TD>Rotate accumulator or memory left</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>ROR, RORA, RORB</FONT></TD>
    <TD>Rotate accumulator or memory right</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>SBCA, SBCB </FONT></TD>
    <TD>Subtract memory from accumulator with borrow</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>STA, STB </FONT></TD>
    <TD>Store accumulator to memory</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>SUBA, SUBB</FONT></TD>
    <TD>Subtract memory from accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>TST, TSTA, TSTB</FONT></TD>
    <TD>Test accumulator or memory location</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>TFR R1, R2</FONT></TD>
    <TD>Transfer R1 to R2 (R1, R2 =3D A, B, CC, =
DP)</TD></TR></TBODY></TABLE>
<P>NOTE: A, B, CC or DP may be pushed to (or pulled from) either stack =
with=20
PSHS, PSHU (PULS, PULU) instructions.</P>
<HR SIZE=3D1>

<H2><A name=3D"TABLE 5"><FONT color=3D#0000ff>TABLE 5</FONT></A><FONT =
color=3D#0000ff>=20
- 16-BIT ACCUMULATOR AND MEMORY INSTRUCTIONS</FONT></H2>
<TABLE cellSpacing=3D0 cellPadding=3D3 border=3D0>
  <TBODY>
  <TR>
    <TD><FONT face=3DCourier>ADDD</FONT></TD>
    <TD>Add memory to D accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>CMPD</FONT></TD>
    <TD>Compare memory from D accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>EXG D, R</FONT></TD>
    <TD>Exchange D with X, Y, S, U or PC</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>LDD</FONT></TD>
    <TD>Load D accumulator from memory</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>SEX </FONT></TD>
    <TD>Sign Extend B accumulator into A accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>STD</FONT></TD>
    <TD>Store D accumulator to memory</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>SUBD</FONT></TD>
    <TD>Subtract memory from D accumulator</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>TFR D, R</FONT></TD>
    <TD>Transfer D to X, Y, S, U or PC</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>TFR R, D</FONT></TD>
    <TD>Transfer X, Y, S, U or PC to D</TD></TR></TBODY></TABLE>
<P><FONT face=3DArial>NOTE: D may be pushed to (or pulled from) either =
stack with=20
PSHS, PSHU (PULS,PULU) instructions.</FONT></P>
<HR SIZE=3D1>

<H2><A name=3D"TABLE 6"><FONT color=3D#0000ff>TABLE 6</FONT></A><FONT =
color=3D#0000ff>=20
- INDEX REGISTER / STACK POINTER INSTRUCTIONS</FONT></H2>
<TABLE cellSpacing=3D0 cellPadding=3D3 border=3D0>
  <TBODY>
  <TR>
    <TD><FONT face=3DCourier>CMPS, CMPU</FONT></TD>
    <TD>Compare memory from stack pointer</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>CMPX, CMPY </FONT></TD>
    <TD>Compare memory from index register</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>EXG R1, R2</FONT></TD>
    <TD>Exchange D, X, Y, S, U or PC wth D, X, Y, S, U or PC</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>LEAS, LEAU</FONT></TD>
    <TD>Load effective address into stack pointer</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>LEAX, LEAY</FONT></TD>
    <TD>Load effective address into index register</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>LDS, LDU</FONT></TD>
    <TD>Load stack pointer from memory</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>LDX, LDY </FONT></TD>
    <TD>Load index register from memory</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>PSHS</FONT></TD>
    <TD>Push A, B, CC, DP, D, X, Y, <STRONG>U</STRONG>, or PC onto=20
      <STRONG>hardware</STRONG> stack</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>PSHU</FONT></TD>
    <TD>Push A, B, CC, DP, D, X, Y, <STRONG>S</STRONG>, or PC onto=20
      <STRONG>user</STRONG> stack</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>PULS</FONT></TD>
    <TD>Pull A, B, CC, DP, D, X, Y, <STRONG>U</STRONG>, or PC from=20
      <STRONG>hardware</STRONG> stack</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>PULU</FONT></TD>
    <TD>Pull A, B, CC, DP, D, X, Y, <STRONG>S</STRONG>, or PC from=20
      <STRONG>user</STRONG> stack</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>STS, STU</FONT></TD>
    <TD>Store stack pointer to memory</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>STX, STY</FONT></TD>
    <TD>Store index register to memory</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>TFR R1, R2 </FONT></TD>
    <TD>Transfer D, X, Y, S, U or PC to D, X, Y, S, U or PC</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>ABX</FONT></TD>
    <TD>Add B accumulator to X (unsigned)</TD></TR></TBODY></TABLE>
<HR SIZE=3D1>

<H2><A name=3D"TABLE 7"><FONT color=3D#0000ff>TABLE 7</FONT></A><FONT =
color=3D#0000ff>=20
- BRANCH INSTRUCTIONS</FONT></H2>
<TABLE cellSpacing=3D0 cellPadding=3D3 border=3D0>
  <TBODY>
  <TR>
    <TD>&nbsp;</TD>
    <TD><FONT color=3D#0000ff><STRONG>SIMPLE =
BRANCHES</STRONG></FONT></TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BEG, LBEQ</FONT></TD>
    <TD>Branch if equal</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BNE, LBNE </FONT></TD>
    <TD>Branch if not equal</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BMI, LBMI </FONT></TD>
    <TD>Branch if minus</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BPL, LBPL</FONT></TD>
    <TD>Branch if plus </TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BCS, LBCS</FONT></TD>
    <TD>Branch if carry set</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BCC, LBCC</FONT></TD>
    <TD>Branch if carry clear</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BVS, LBVS</FONT></TD>
    <TD>Branch if overflow set</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BVC, LBVC</FONT></TD>
    <TD>Branch if overflow clear</TD></TR>
  <TR>
    <TD>&nbsp;</TD>
    <TD><FONT color=3D#0000ff><STRONG>SIGNED =
BRANCHES</STRONG></FONT></TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BGT, LBGT</FONT></TD>
    <TD>Branch if greater (signed)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BVS, LBVS</FONT></TD>
    <TD>Branch if invalid 2's complement result</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BGE, LBGE</FONT></TD>
    <TD>Branch if greater than or equal (signed)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BEQ, LBEQ</FONT></TD>
    <TD>Branch if equal</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BNE, LBNE</FONT></TD>
    <TD>Branch if not equal</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BLE, LBLE</FONT></TD>
    <TD>Branch if less than or equal (signed)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BVC, LBVC</FONT></TD>
    <TD>Branch if valid 2's complement result</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BLT, LBLT</FONT></TD>
    <TD>Branch if less than (signed)</TD></TR>
  <TR>
    <TD>&nbsp;</TD>
    <TD><FONT color=3D#0000ff><STRONG>UNSIGNED =
BRANCHES</STRONG></FONT></TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BHI, LBHI </FONT></TD>
    <TD>Branch if higher (unsigned)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BCC, LBCC</FONT></TD>
    <TD>Branch if higher or same (unsigned)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BHS, LBHS </FONT></TD>
    <TD>Branch if higher or same (unsigned)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BEQ, LBEQ </FONT></TD>
    <TD>Branch if equal</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BNE, LBNE</FONT></TD>
    <TD>Branch if not Equal</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BLS, LBLS </FONT></TD>
    <TD>Branch if lower or same (unsigned)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BCS, LBCS </FONT></TD>
    <TD>Branch if lower (unsigned)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BL0, LBLO </FONT></TD>
    <TD>Branch it lower (unsigned)</TD></TR>
  <TR>
    <TD>&nbsp;</TD>
    <TD><FONT color=3D#0000ff><STRONG>OTHER =
BRANCHES</STRONG></FONT></TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BSR, LBSR</FONT></TD>
    <TD>Branch to subroutine</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BRA, LBRA</FONT></TD>
    <TD>Branch always</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>BRN, LBRN </FONT></TD>
    <TD>Branch never</TD></TR></TBODY></TABLE>
<HR SIZE=3D1>

<H2><A name=3D"TABLE 8"><FONT color=3D#0000ff>TABLE 8</FONT></A><FONT =
color=3D#0000ff>=20
- MISCELLANEOUS INSTRUCTIONS</FONT></H2>
<TABLE cellSpacing=3D0 cellPadding=3D3 border=3D0>
  <TBODY>
  <TR>
    <TD><FONT face=3DCourier>ANDCC</FONT></TD>
    <TD>AND Condition Code Register</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>CWAI</FONT></TD>
    <TD>AND Condition Code Register, then wait for interrupt.</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>NOP</FONT></TD>
    <TD>No Operation</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>ORCC</FONT></TD>
    <TD>OR Condition Code Register</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>JMP</FONT></TD>
    <TD>Jump</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>JSR</FONT></TD>
    <TD>Jump to subroutine</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>RTI</FONT></TD>
    <TD>Return from Interrupt</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>RTS</FONT></TD>
    <TD>Return from Subroutine</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>SWI, SWI2, SWI3</FONT></TD>
    <TD>Software Interrupt (absolute indirect)</TD></TR>
  <TR>
    <TD><FONT face=3DCourier>SYNC</FONT></TD>
    <TD>Synchronise with Interrupt =
line</TD></TR></TBODY></TABLE></BODY></HTML>
