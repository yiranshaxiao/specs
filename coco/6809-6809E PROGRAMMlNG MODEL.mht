From: <Saved by Microsoft Internet Explorer 5>
Subject: 6809/6809E PROGRAMMlNG MODEL
Date: Thu, 15 May 2003 21:53:42 -0700
MIME-Version: 1.0
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.howell1964.freeserve.co.uk/parts/6809_prog_model.htm
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>6809/6809E PROGRAMMlNG MODEL</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2800.1170" name=3DGENERATOR></HEAD>
<BODY bgColor=3D#ffffff>
<H1><FONT color=3D#0000ff>6809/6809E PROGRAMMlNG MODEL</FONT></H1>
<P>As shown in Figure 4, the MC6809E adds three registers to the set =
available=20
in the MC6800. The added registers include a direct page register, the =
user=20
stack pointer, and a second index register.</P>
<BLOCKQUOTE>
  <P><FONT color=3D#0000ff><STRONG>FIGURE 4 - PROGRAMMING MODEL OF THE=20
  MICROPROCESSING UNIT</STRONG></FONT></P>
  <TABLE borderColor=3D#ffffff borderColorDark=3D#ffffff =
borderColorLight=3D#ffffff=20
  border=3D1>
    <TBODY>
    <TR>
      <TD align=3Dright>&nbsp;</TD>
      <TD bgColor=3D#ffffff colSpan=3D4><FONT =
face=3DCourier>15</FONT></TD>
      <TD align=3Dright bgColor=3D#ffffff colSpan=3D4><FONT =
face=3DCourier>8</FONT></TD>
      <TD bgColor=3D#ffffff colSpan=3D4><FONT =
face=3DCourier>7</FONT></TD>
      <TD align=3Dright bgColor=3D#ffffff colSpan=3D4><FONT =
face=3DCourier>0</FONT></TD>
      <TD>&nbsp;</TD></TR>
    <TR>
      <TD align=3Dright><A=20
        =
href=3D"http://www.howell1964.freeserve.co.uk/parts/6809_prog_model.htm#X=
"><STRONG>X</STRONG></A></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00=20
        colSpan=3D16><STRONG>Index register</STRONG></TD>
      <TD>&nbsp;</TD></TR>
    <TR>
      <TD align=3Dright><A=20
        =
href=3D"http://www.howell1964.freeserve.co.uk/parts/6809_prog_model.htm#Y=
"><STRONG>Y</STRONG></A></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00=20
        colSpan=3D16><STRONG>Index register</STRONG></TD>
      <TD>&nbsp;</TD></TR>
    <TR>
      <TD align=3Dright><A=20
        =
href=3D"http://www.howell1964.freeserve.co.uk/parts/6809_prog_model.htm#U=
"><STRONG>U</STRONG></A></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00=20
        colSpan=3D16><STRONG>User Stack Pointer</STRONG></TD>
      <TD borderColor=3D#ffffff borderColorLight=3D#ffffff=20
      borderColorDark=3D#ffffff>&nbsp;</TD></TR>
    <TR>
      <TD align=3Dright><A=20
        =
href=3D"http://www.howell1964.freeserve.co.uk/parts/6809_prog_model.htm#S=
"><STRONG>S</STRONG></A></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00=20
        colSpan=3D16><STRONG>Hardware Stack Pointer</STRONG></TD>
      <TD>&nbsp;</TD></TR>
    <TR>
      <TD align=3Dright><A=20
        =
href=3D"http://www.howell1964.freeserve.co.uk/parts/6809_prog_model.htm#P=
C"><STRONG>PC</STRONG></A></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00=20
        colSpan=3D16><STRONG>Program Counter</STRONG></TD>
      <TD>&nbsp;</TD></TR>
    <TR>
      <TD align=3Dright><A=20
        =
href=3D"http://www.howell1964.freeserve.co.uk/parts/6809_prog_model.htm#D=
"><STRONG>D</STRONG></A></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00=20
        colSpan=3D8><STRONG>A</STRONG></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00=20
        colSpan=3D8><STRONG>B</STRONG></TD>
      <TD>Accumulators</TD></TR>
    <TR>
      <TD align=3Dright>&nbsp;</TD>
      <TD align=3Dmiddle bgColor=3D#ffffff colSpan=3D8>&nbsp;</TD>
      <TD bgColor=3D#ffffff colSpan=3D8>&nbsp;</TD>
      <TD>&nbsp;</TD></TR>
    <TR>
      <TD align=3Dright>&nbsp;</TD>
      <TD align=3Dright bgColor=3D#ffffff colSpan=3D8><A=20
        =
href=3D"http://www.howell1964.freeserve.co.uk/parts/6809_prog_model.htm#D=
P"><STRONG>DP</STRONG></A></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00=20
        colSpan=3D8><STRONG>Direct Page</STRONG></TD>
      <TD>&nbsp;</TD></TR>
    <TR>
      <TD align=3Dright><FONT face=3DCourier =
color=3D#ffffff>-</FONT></TD>
      <TD align=3Dmiddle bgColor=3D#ffffff><FONT face=3DCourier=20
        color=3D#ffffff>-</FONT></TD>
      <TD align=3Dmiddle bgColor=3D#ffffff><FONT face=3DCourier=20
        color=3D#ffffff>-</FONT></TD>
      <TD align=3Dmiddle bgColor=3D#ffffff><FONT face=3DCourier=20
        color=3D#ffffff>-</FONT></TD>
      <TD align=3Dmiddle bgColor=3D#ffffff><FONT face=3DCourier=20
        color=3D#ffffff>-</FONT></TD>
      <TD align=3Dmiddle bgColor=3D#ffffff><FONT face=3DCourier=20
        color=3D#ffffff>-</FONT></TD>
      <TD align=3Dmiddle bgColor=3D#ffffff><FONT face=3DCourier=20
        color=3D#ffffff>-</FONT></TD>
      <TD align=3Dmiddle bgColor=3D#ffffff><FONT face=3DCourier=20
        color=3D#ffffff>-</FONT></TD>
      <TD align=3Dmiddle bgColor=3D#ffffff><FONT face=3DCourier=20
        color=3D#ffffff>-</FONT></TD>
      <TD bgColor=3D#ffffff colSpan=3D8>&nbsp;</TD>
      <TD>A1</TD></TR>
    <TR>
      <TD align=3Dright>&nbsp;</TD>
      <TD align=3Dright bgColor=3D#ffffff colSpan=3D8><A=20
        =
href=3D"http://www.howell1964.freeserve.co.uk/parts/6809_prog_model.htm#C=
CR"><STRONG>CCR</STRONG></A></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>E</STRONG></FONT></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>F</STRONG></FONT></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>H</STRONG></FONT></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>I</STRONG></FONT></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>N</STRONG></FONT></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>Z</STRONG></FONT></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>V</STRONG></FONT></TD>
      <TD borderColor=3D#000000 align=3Dmiddle bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>C</STRONG></FONT></TD>
      <TD>Condition Code Register</TD></TR></TBODY></TABLE></BLOCKQUOTE>
<P>&nbsp;</P>
<H2><FONT color=3D#0000ff>ACCUMULATORS (</FONT><A name=3DA><FONT=20
color=3D#0000ff>A</FONT></A><FONT color=3D#0000ff>, </FONT><A =
name=3DB><FONT=20
color=3D#0000ff>B</FONT></A><FONT color=3D#0000ff>, </FONT><A =
name=3DD><FONT=20
color=3D#0000ff>D</FONT></A><FONT color=3D#0000ff>)</FONT></H2>
<P>The A and B registers are general purpose accumulators which are used =
for=20
arithmetic calculations and manipulation of data. </P>
<P>Certain instructions concatenate the A and B registers to form a =
single=20
16-bit accumulator. This is referred to as the D register, and is formed =
with=20
the A register as the most significant byte.</P>
<H2><FONT color=3D#0000ff>DIRECT PAGE REGISTER (</FONT><A =
name=3DDP><FONT=20
color=3D#0000ff>DP</FONT></A><FONT color=3D#0000ff>)</FONT></H2>
<P>The direct page register of the MC6809E serves to enhance the direct=20
addressing mode. The content of this register appears at the higher =
address=20
outputs (A8-A15) during direct addressing instruction execution. This =
allows the=20
direct mode to be used at any place in memory, under program control. To =
ensure=20
M6800 compatibility, all bits of this register are cleared during =
processor=20
reset.</P>
<H2><FONT color=3D#0000ff>INDEX REGISTERS (</FONT><A name=3DX><FONT=20
color=3D#0000ff>X</FONT></A><FONT color=3D#0000ff>, </FONT><A =
name=3DY><FONT=20
color=3D#0000ff>Y</FONT></A><FONT color=3D#0000ff>)</FONT></H2>
<P>The index registers are used in indexed mode of addressing. The =
16-bit=20
address in this register takes part in the calculation of effective =
addresses.=20
This address may be used to point to data directly or may be modified by =
an=20
optional constant or register offset. During some indexed modes, the =
contents of=20
the index register are incremented and decremented to point to the next =
item of=20
tabular type data. All four pointer registers (X, Y, U, S) may be used =
as index=20
registers. </P>
<H2><FONT color=3D#0000ff>STACK POINTER (</FONT><A name=3DU><FONT=20
color=3D#0000ff>U</FONT></A><FONT color=3D#0000ff>, </FONT><A =
name=3DS><FONT=20
color=3D#0000ff>S</FONT></A><FONT color=3D#0000ff>)</FONT></H2>
<P>The hardware stack pointer (S) is used automatically by the processor =
during=20
subroutine calls and interrupts. The user stack pointer (U) is =
controlled=20
exclusively by the programmer. This allows arguments to be passed to and =
from=20
subroutines with ease. The U register is frequently used as a stack =
marker. Both=20
stack pointers have the same indexed mode addressing capabilities as the =
X and Y=20
registers, but also support push and pull instructions. This allows the =
MC6809E=20
to be used efficiently as a stack processor, greatly enhancing its =
ability to=20
support higher level languages and modular programming. </P>
<BLOCKQUOTE>
  <P><FONT color=3D#0000ff><STRONG>NOTE</STRONG></FONT> </P>
  <P>The stack pointers of the MC6809E point to the top of the stack in =
contrast=20
  to the MC6800 stack pointer, which pointed to the next free location =
on=20
  stock.</P></BLOCKQUOTE>
<H2><FONT color=3D#0000ff>PROGRAM COUNTER (</FONT><A name=3DPC><FONT=20
color=3D#0000ff>PC</FONT></A><FONT color=3D#0000ff>)</FONT></H2>
<P>The program counter is used by the processor to point to the address =
of the=20
next instruction to be executed by the processor. Relative addressing is =

provided allowing the program counter to be used like an index register =
in some=20
situations. </P>
<H2><FONT color=3D#0000ff>CONDITION CODE REGISTER (</FONT><A =
name=3DCCR><FONT=20
color=3D#0000ff>CCR</FONT></A><FONT color=3D#0000ff>)</FONT></H2>
<P>The condition code register defines the state of the processor at any =
given=20
time. See Figure 5 </P>
<BLOCKQUOTE>
  <P><FONT color=3D#0000ff><STRONG>FIGURE 5 - CONDITION CODE REGISTER=20
  FORMAT</STRONG></FONT></P></BLOCKQUOTE>
<BLOCKQUOTE>
  <TABLE borderColor=3D#ffffff borderColorDark=3D#ffffff cellPadding=3D3 =

  borderColorLight=3D#ffffff border=3D1>
    <TBODY>
    <TR>
      <TD><FONT face=3DCourier>7</FONT></TD>
      <TD><FONT face=3DCourier>6</FONT></TD>
      <TD><FONT face=3DCourier>5</FONT></TD>
      <TD><FONT face=3DCourier>4</FONT></TD>
      <TD><FONT face=3DCourier>3</FONT></TD>
      <TD><FONT face=3DCourier>2</FONT></TD>
      <TD><FONT face=3DCourier>1</FONT></TD>
      <TD><FONT face=3DCourier>0</FONT></TD>
      <TD>&nbsp;</TD></TR>
    <TR>
      <TD borderColor=3D#000000 bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>E</STRONG></FONT></TD>
      <TD borderColor=3D#000000 bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>F</STRONG></FONT></TD>
      <TD borderColor=3D#000000 bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>H</STRONG></FONT></TD>
      <TD borderColor=3D#000000 bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>I</STRONG></FONT></TD>
      <TD borderColor=3D#000000 bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>N</STRONG></FONT></TD>
      <TD borderColor=3D#000000 bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>Z</STRONG></FONT></TD>
      <TD borderColor=3D#000000 bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>V</STRONG></FONT></TD>
      <TD borderColor=3D#000000 bgColor=3D#00ff00><FONT=20
        face=3DCourier><STRONG>C</STRONG></FONT></TD>
      <TD>&nbsp;</TD></TR>
    <TR>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>+</FONT></TD>
      <TD><FONT face=3DCourier>Carry</FONT></TD></TR>
    <TR>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>+</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>Overflow</FONT></TD></TR>
    <TR>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>+</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>Zero</FONT></TD></TR>
    <TR>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>+</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>Negative</FONT></TD></TR>
    <TR>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>+</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>!IRQ Mask</FONT></TD></TR>
    <TR>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>+</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>Half Carry</FONT></TD></TR>
    <TR>
      <TD><FONT face=3DCourier>|</FONT></TD>
      <TD><FONT face=3DCourier>+</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>!FIRQ</FONT></TD></TR>
    <TR>
      <TD><FONT face=3DCourier>+</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>-</FONT></TD>
      <TD><FONT face=3DCourier>Entire =
Flag</FONT></TD></TR></TBODY></TABLE></BLOCKQUOTE>
<H2><FONT color=3D#0000ff>CONDITION CODE REGISTER =
DESCRIPTION</FONT></H2>
<BLOCKQUOTE>
  <H3><FONT color=3D#0000ff>CARRY FLAG (C)</FONT></H3>
  <BLOCKQUOTE>
    <P>Bit 0 is the carry flag and is usually the carry from the binary =
ALU. C=20
    is also used to represent a "borrow" from subtract like instructions =
(CMP,=20
    NEG, SUB, SBCI and is the complement of the carry from the binary=20
  ALU.</P></BLOCKQUOTE>
  <H3><FONT color=3D#0000ff>OVERFLOW FLAG (V)</FONT></H3>
  <BLOCKQUOTE>
    <P>Bit 1 is the overflow flag and is set to a one by an operation =
which=20
    causes a signed two's complement overflow. This overflow is detected =
in an=20
    operation in which the carry from the MSB in the ALU does not match =
the=20
    carry from the MSB-1,</P></BLOCKQUOTE>
  <H3><FONT color=3D#0000ff>ZERO FLAG (Z)</FONT></H3>
  <BLOCKQUOTE>
    <P>Bit 2 is the zero flag and is set to one if the result of the =
previous=20
    operation was identical to zero.</P></BLOCKQUOTE>
  <H3><FONT color=3D#0000ff>NEGATIVE FLAG (N) </FONT></H3>
  <BLOCKQUOTE>
    <P>Bit 3 is the negative flag, which contains exactly the value of =
the MSB=20
    of the result of the preceding operation. Thus, a negative two's =
complement=20
    result will leave N set to a one.</P></BLOCKQUOTE>
  <H3><FONT color=3D#0000ff>!IRQ MASK (I) </FONT></H3>
  <BLOCKQUOTE>
    <P>Bit 4 is the !IRQ mask bit. The processor wiII not recognize =
interrupts=20
    from the !IRQ line if this bit is set to a one. !NMI, !IRQ, !FIRQ, =
!RESET=20
    and SWI set I to a one. SWI2 and SWI3 do not affect =
I.</P></BLOCKQUOTE>
  <H3><FONT color=3D#0000ff>HALF CARRY (H)</FONT></H3>
  <BLOCKQUOTE>
    <P>Bit 5 is the half-carry bit, and is used to indicate a carry from =
bit 3=20
    in the ALU as a result of an 8-bit addition only (ADC or ADD). This =
bit is=20
    used by the DAA instruction to perform a BCD decimal add adjust =
operation.=20
    The state of this flag is undefined in all subtract-like=20
  instructions.</P></BLOCKQUOTE>
  <H3><FONT color=3D#0000ff>!FIRQ MASK (F) </FONT></H3>
  <BLOCKQUOTE>
    <P>Bit 6 is the !FIRQ mask bit. The processor wiII not recognize =
interrupts=20
    from the F!IRQ line if this bit is set to a one. !NMI, !FIRQ, !RESET =
and SWI=20
    set F to a one. !IRQ, SWI2 and SWI3 do not affect =
I.</P></BLOCKQUOTE>
  <H3><FONT color=3D#0000ff>ENTIRE FLAG (E)</FONT></H3>
  <BLOCKQUOTE>
    <P>Bit 7 is the entire flag, and when set to a one indicates that =
the=20
    complete machine state (all the registers) was stacked, as opposed =
to the=20
    subset state (PC and CC). The E bit of the stacked CC is used on a =
return=20
    from interrupt (RTI) to determine the extent of the unstacking. =
Therefore,=20
    the current E left in the condition code register represents past =
action.=20
    </P></BLOCKQUOTE></BLOCKQUOTE></BODY></HTML>
